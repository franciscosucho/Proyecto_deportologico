<!DOCTYPE html>
<html lang="es">

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Mental Strong</title>
    <link rel="stylesheet" href="/css/estilo.css">
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.6.0/css/all.min.css">
    <link rel="shortcut icon" href="../public/resources/mental-strong.ico" type="image/x-icon">
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link
        href="https://fonts.googleapis.com/css2?family=Poppins:ital,wght@0,100;0,200;0,300;0,400;0,500;0,600;0,700;0,800;0,900;1,100;1,200;1,300;1,400;1,500;1,600;1,700;1,800;1,900&display=swap"
        rel="stylesheet">
</head>

<body>
    <main>
        <section id="ventana_prin">
            <aside id="menu_lateral">
                <%- include('menu.ejs') %>
            </aside>

            <section id="main_recetas" class="cont_prog_main">
                <div id="cont_text_main">
                    <a href="/lista_ejercios">
                        <i class="fa-solid fa-arrow-left"></i>
                    </a>
                    <h2 id="nombre_us">Lista de ejercios de <%-nombre_ejer%></h2>
                </div>
                <div id="cont_ejercio_focus_main">
                    <section id="cont_ejercio_focus" data-ejer="<%-nombre_ejer%>"></section>
                </div>

            </section>
        </section>
    </main>
    <script>
        const cont_ejercio_focus = document.getElementById("cont_ejercio_focus");

        // Variables de API
        const nombre_ejer = cont_ejercio_focus.getAttribute("data-ejer");
        const url = `https://exercises-by-api-ninjas.p.rapidapi.com/v1/exercises?muscle=${nombre_ejer}`;
        const options = {
            method: 'GET',
            headers: {
                'x-rapidapi-key': 'd5bb8086d5msh205752128cad326p1bc9f9jsna92fbd0567a7',
                'x-rapidapi-host': 'exercises-by-api-ninjas.p.rapidapi.com'
            }
        };

        // Carga los ejercicios
        document.addEventListener('DOMContentLoaded', () => {
            fetchExercises(url, options);
        });

        // Función que obtiene los ejercicios de la API
        async function fetchExercises(url, options) {
            try {
                const response = await fetch(url, options);
                const result = await response.json();
                createEjercicios(result);
            } catch (error) {
                console.error('Error fetching exercises:', error);
            }
        }

        // Función que crea los ejercicios en la página
        async function createEjercicios(result) {
            result.forEach(async ejercicio => {
                const cont_ejercio = document.createElement("div");
                cont_ejercio.classList.add("cont_ejercio");

                const name = document.createElement("h4");
                const cont_text_header = document.createElement("div");
                cont_text_header.classList.add("cont_text_header");

                const cont_text = document.createElement("div");
                cont_text.classList.add("cont_text");

                const name_es = await traducirTexto(ejercicio.name);
                name.textContent = name_es;
                name.classList.add("name");

                const dif = document.createElement("h5");
                const dif_es = await traducirTexto(ejercicio.difficulty);
                dif.textContent = ` ${dif_es}`;
                dif.classList.add("dif");

                const ins = document.createElement("div");
                const instrucciones = ejercicio.instructions.split('.');
                const ul = document.createElement('ul');
                ul.classList.add("cont_inst")
                for (const [index, instruccion] of instrucciones.entries()) {
                    if (instruccion.trim() !== '') {
                        let li = document.createElement('li');
                        let ins_es = await traducirTexto(instruccion);

                        li.textContent = `${index + 1}. ${ins_es}`;

                        ul.appendChild(li);
                    }
                }
                ins.textContent = 'Instrucciones:';
                ins.appendChild(ul);
                ins.classList.add("ins");

                const cont_equip = document.createElement("div");
                cont_equip.classList.add("cont_equip");

                const icon_gym = document.createElement("li");
                icon_gym.classList.add('fa-solid', 'fa-dumbbell');

                const equip = document.createElement("h5");
                let text_equip = ejercicio.equipment.replace(/_/g, ' ');
                text_equip = await traducirTexto(text_equip);
                equip.textContent = `Equipo: ${text_equip}`;
                equip.classList.add("equip");

                cont_text_header.appendChild(name);
                cont_text_header.appendChild(dif);
                cont_ejercio.appendChild(cont_text_header);

                cont_equip.appendChild(icon_gym);
                cont_equip.appendChild(equip);
                cont_ejercio.appendChild(cont_equip);

                cont_text.appendChild(ins);
                cont_ejercio.appendChild(cont_text);

                cont_ejercio_focus.appendChild(cont_ejercio);
            });
        }

        // Clave y endpoint para la traducción
        const key = "eQIFoJcy8xWDZEHxGewZh78ZxtCzYL2DhapjGWQSgdcarLtnJIF1JQQJ99AKACYeBjFXJ3w3AAAbACOGTs9G";
        const endpoint = "https://api.cognitive.microsofttranslator.com/";
        const regionLocation = "eastus";

        // Función para traducir texto
        async function traducirTexto(texto) {
            const path = '/translate';
            const url = `${endpoint}${path}?api-version=3.0&from=en&to=es`;

            const options = {
                method: 'POST',
                headers: {
                    'Ocp-Apim-Subscription-Key': key,
                    'Ocp-Apim-Subscription-Region': regionLocation,
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify([{ 'Text': texto }])
            };

            try {
                const response = await fetch(url, options);
                if (!response.ok) {
                    throw new Error(`HTTP error! Status: ${response.status}`);
                }

                const data = await response.json();
                return data[0].translations[0].text;
            } catch (error) {
                console.error("Error en la traducción:", error);
            }
        }
    </script>
</body>

</html>